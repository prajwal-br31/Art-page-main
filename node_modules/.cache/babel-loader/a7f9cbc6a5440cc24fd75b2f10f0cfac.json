{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/brundal/Documents/Website/Art-page-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/brundal/Documents/Website/Art-page-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar packageData = require('../../package.json');\nvar shared = require('../shared');\n\n/**\n * Generates a Transport object to generate JSON output\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nvar JSONTransport = /*#__PURE__*/function () {\n  function JSONTransport(options) {\n    _classCallCheck(this, JSONTransport);\n    options = options || {};\n    this.options = options || {};\n    this.name = 'JSONTransport';\n    this.version = packageData.version;\n    this.logger = shared.getLogger(this.options, {\n      component: this.options.component || 'json-transport'\n    });\n  }\n\n  /**\n   * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n   *\n   * @param {Object} emailMessage MailComposer object\n   * @param {Function} callback Callback function to run when the sending is completed\n   */\n  _createClass(JSONTransport, [{\n    key: \"send\",\n    value: function send(mail, done) {\n      var _this = this;\n      // Sendmail strips this header line by itself\n      mail.message.keepBcc = true;\n      var envelope = mail.data.envelope || mail.message.getEnvelope();\n      var messageId = mail.message.messageId();\n      var recipients = [].concat(envelope.to || []);\n      if (recipients.length > 3) {\n        recipients.push('...and ' + recipients.splice(2).length + ' more');\n      }\n      this.logger.info({\n        tnx: 'send',\n        messageId: messageId\n      }, 'Composing JSON structure of %s to <%s>', messageId, recipients.join(', '));\n      setImmediate(function () {\n        mail.normalize(function (err, data) {\n          if (err) {\n            _this.logger.error({\n              err: err,\n              tnx: 'send',\n              messageId: messageId\n            }, 'Failed building JSON structure for %s. %s', messageId, err.message);\n            return done(err);\n          }\n          delete data.envelope;\n          delete data.normalizedHeaders;\n          return done(null, {\n            envelope: envelope,\n            messageId: messageId,\n            message: _this.options.skipEncoding ? data : JSON.stringify(data)\n          });\n        });\n      });\n    }\n  }]);\n  return JSONTransport;\n}();\nmodule.exports = JSONTransport;","map":null,"metadata":{},"sourceType":"script"}